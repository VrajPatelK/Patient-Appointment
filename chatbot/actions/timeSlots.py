from datetime import datetime, timedelta
from collections import defaultdict


class TimeArray:
    def __init__(self):
        self.formatter = "%H:%M"

    def create_time_array(self, appointment_time, serv_start_time, serv_end_time, break_start_time, break_end_time, bkd):
        all_time_slots = []
        all_time_slots.extend(self.time_array(appointment_time, serv_start_time, break_start_time))
        all_time_slots.extend(self.time_array(appointment_time, break_end_time, serv_end_time))

        today = datetime.now().date()
        obj = defaultdict(list)
        for _ in range(7):
            today += timedelta(days=1)
            dt = str(today)
            slots = []
            if dt not in bkd:
                slots.extend(all_time_slots)
            else:
                for f in all_time_slots:
                    if f not in bkd[dt]:
                        slots.append(f)
            obj[dt] = slots
        return obj

    def time_array(self, x, start_time, end_time):
        start_time = datetime.strptime(start_time, self.formatter)
        end_time = datetime.strptime(end_time, self.formatter)
        time_stops = []
        while start_time <= end_time:
            tp = start_time.strftime(self.formatter)
            start_time += timedelta(minutes=x)
            tp2 = start_time.strftime(self.formatter)
            if start_time > end_time:
                break
            time_stops.append(f"{tp}-{tp2}")
        return time_stops


# Example usage
def getAvailaleSlotes():
    print("get avail slots")
    time_array = TimeArray()
    bkd = {'2023-06-18': ['09:00-10:00', '10:00-11:00', '11:00-12:00', '13:00-14:00', '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00']}  # Add the booked appointments dictionary
    result = time_array.create_time_array(
        appointment_time=60,
        serv_start_time="09:00",
        break_start_time="12:00",
        break_end_time="13:00",
        serv_end_time="18:00",
        bkd=bkd
    )
    
    dates=[]
    for i in result:
        if len(result[i])!=0:
            dates.append(i)
    # print(dates)
    # for x in dates:
    #     print("- ["+x.replace("-","/")+"](appointment_date)")
    
    # print(result[dates[0]])
    # print(str(dict(result)).replace("'",'"'))
    return str(dict(result)).replace("'",'"'),str(dates).replace("'",'"')

# s="1','5'"
# print(s.replace("'","\""))

x,y=getAvailaleSlotes()
import json
z={x:x,y:y}
print(str(z).replace("'","\""))
# x='{"timeslot": "{"2023-06-12": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-13": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-14": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-15": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-16": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-17": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"], "2023-06-18": ["09:00-09:15", "09:15-09:30", "09:30-09:45", "09:45-10:00", "10:00-10:15", "10:15-10:30", "10:30-10:45", "10:45-11:00", "11:00-11:15", "11:15-11:30", "11:30-11:45", "11:45-12:00", "13:00-13:15", "13:15-13:30", "13:30-13:45", "13:45-14:00", "14:00-14:15", "14:15-14:30", "14:30-14:45", "14:45-15:00", "15:00-15:15", "15:15-15:30", "15:30-15:45", "15:45-16:00", "16:00-16:15", "16:15-16:30", "16:30-16:45", "16:45-17:00", "17:00-17:15", "17:15-17:30", "17:30-17:45", "17:45-18:00"]}", "dates": "["2023-06-12", "2023-06-13", "2023-06-14", "2023-06-15", "2023-06-16", "2023-06-17", "2023-06-18"]"}'
# s="{\"s\":1}"
# print(json.loads(s))